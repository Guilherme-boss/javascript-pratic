# javascript-pratic

const forma = " quadrado";
const altura = 15;
const comprimento = 5;
let area 

if ( forma === " quadrado"){
    area = altura * comprimento;
}else{
    (altura * comprimento)/2

}
console.log( area)



let numero = 3
let texto = " pitter";

console.log(typeof numero)
console.log(typeof texto)


        
         class retangulo{
                    constructor(base,altura){
                        this.a = altura;
                        this.b = base;

                    }
                        calcularArea(){
                            return this.a * this.b;
                        }
                            calcularperimetro (){
                                return (2* this.a + 2 * this.b);

                            }

                  }
                  var ret1 = new retangulo(12,20);
                  document.write ("a area é igual a " + ret1.calcularArea)
                  document.write(" o perimetro é igual a " + ret1.calcularperimetro(+"<br>"))
                  
                  
                  
     
    LIVRO MAIS BARATO
    
    
    const precoslivros = [25,15,30,50,45,20];

let maisbarato = 0

for (let atual = 0; atual < precoslivros.length;atual ++){
    if ( precoslivros[atual] < precoslivros[maisbarato]){
        maisbarato = atual
    }
}
console.log(`o livro maiss barato custa ${precoslivros[maisbarato]}`)
-------------------------------------------------------------------------------------------

media 

 const nota1= 10;
 const nota2 =6.5;
 const nota3 = 8;
const nota4 = 7.5;

const media = (nota1 + nota2 + nota3 + nota4)/4;

console.log(media);




//const ota1 = 10;
//const notna2 = 8;
//onst nota3 = 5;
//const nota4 = 6;

const notas = [10, 6.5 , 8, 7.5];
const media = (notas[0]+[1]+[2]+[3]) / notas.length;
console.log(media)


const notas = [10, 6 , 8];

const media = (notas[0] + notas[1] + notas[2])/ notas.length
console.log(media)


// usando push 
const notas = [10, 6 , 8];

notas.push(7)  // push é para inserir arrey uma nova nota

const media = (notas[0] + notas[1] + notas[2]+ notas[3])/ notas.length
console.log(media)


// excluindo numero o pop vai remover os ultimos itens  

const notas = [10,6,8,5.5,10];

notas.pop ()



const media = (notas[0] + notas[1] + notas[2]+ notas[3])/ notas.length

console.log(`a media é ${media}`)
----------------------------------------------------------------------------------------
slice dividri nomes ou dividir....

const alunos = [ "ana","caio","lara","guilherme","julia","ramon","flavio","joao","carla","pedro","roger","augusto","fabio","gal","vinicius","carlos","bia"];

const sala1 = alunos.slice(0,alunos.length/2)
console.log(sala1)
const sala2 = alunos.slice(alunos.length/2)
console.log(sala2)

------------------------------------------------------------------------------------------------------


splice = adicionar ou remover

const nomes = [ "joao","ana","caio","leo","lara","felipe"];

nomes.splice(1,2,"rodrigo");

console.log(nomes)

ou 
const nomes = [ "joao","ana","caio","leo","lara","felipe"];

nomes.splice(1,2);
nomem push("redrigo")

console.log(nomes)
---------------------------------------------------------------
concat
const salajs = ["felipe","julio","guilherme"];
const salapy = ["fernando","mateus","pedro"];

const salasuni = salapy.concat(salajs);
console.log(salasuni)

---------------------------------------------------------------------------

const alunos = ["joao","juliana","ana","caio"];
const medias = [10,8,7.5,9];

const listadealunosemedias = [alunos,medias];
console.log(
    `A aluna da posição 1 da lista de alunos é: ${listadealunosemedias[0][1]}
A nota desse aluna é ${listadealunosemedias[1][1]}
`

);
  =========================================================================================
  
  procurando aluno 
  
  const alunos = ["joao","juliana","ana","caio"];
const medias = [10,8,7.5,9];

const listadealunosemedias = [alunos,medias];

function exibenomeenota(alunos){
if(listadealunosemedias[0].includes(alunos)){
    console.log(`${aluno}esta cadastrado!`)
}else{
    console.log("aluno não encontrado!")
}
}
exibirnomeenome("joao")


melhorado ---

const alunos = ["joao","juliana","ana","caio"];
const medias = [10,8,7.5,9];

const listadealunosemedias = [alunos,medias];

function exibenomeenota(alunos){

if(listadealunosemedias[0].includes(alunos)){

    const [alunos,medias] = listadealunosemedias;

    const indice = alunos.indexOf(alunos);
    
    const mediadolauno  = medias[indice];

    console.log(`${alunos} tem a media ${mediadolauno}`);
}else{
    console.log("aluno não encontrado!");
}
}
exibenomeenota("joao");

----------------------------------------------------------------------------------------------

Imprima o indice e a lista com os seguintes numeros 100, 200 , 300 , 400, 500 , 600

const numeros = [100,200,300,400,500,600];

for(let indice = 0; indice < numeros.length; indice++){
console.log(numeros[indice]);
}

-----------------------------------------------------------------------------------

//media for 

const notas = [10, 6.5 , 8, 7.5];

let somadasnotas = 0;

for(let indice = 0; indice < notas.length;indice++){
    somadasnotas += notas[i];
}
const media = somadasnotas/ notas.length;

console.log(`a media é: ${media}`);
 ---------------------------------------------------------------
 
 calculando media entre seguintes notas usando o ForEath
 10,6.5,8,7.5
 
 const notas = [10,6.5,8,7.5];

somasdasnotas = 0;

notas.forEach(function(nota){
somasdasnotas += notas;
})


const media = somasdasnotas / notas.length;
console.log(`a media é:${media}`)

=--------------------------------------------------
usando map = 
const notas = [10,6.5,8,7.5];


const notasatualizadas = notas.map((nota)=> {
return nota + 1 >= 10 ? 10: nota +1;
}); 

console.log(notasatualizadas);
=-==============-==========================================-==
nomes padronizados

const nomes = ['ana','caio vinicius', ' BIA silva'];

const nomespadrao = nomes.map((nome)=>{
    return nome.toUpperCase();
})

console.log ( nomespadrao);

============================================================
// depois de calucar a media do aluno preciasa saber quem foram resprovados 


const alunos = [ "ana", "marcos","maria","mauro"];
const medias = [ 7 , 4.5 , 8,7,.5];

const reprovados = alunos.filter((aluno, indice)=>{
    return medias[indice] < 7;

})
console.log(reprovados)
------------------------------------------------------------------------------
qual é a media de todos os alunos de cada 3 salas, calcule a media geral de cada sala.

const salajs = [7,8,8,7,10,65,4,10,7];
const salajava = [6,5,8,9,5,6];
const salapython = [7,3.5,8,9.5];

function calculamedia(notasdasala){
    const somadasnotas = notasdasala.reduce((acumulador,nota)=>{
        return acumulador + nota;
    }, 0);
    const media = somadasnotas/notasdasala.length;
    return media;
}

console.log(`a media da sala de javascript é ${calculamedia(salajs)}`);
console.log(`a media da sala de python é ${calculamedia(salapython)}`);
console.log(`a media da sala de java é ${calculamedia(salajava)}`);
----------------------------------------------------------------------------------
adicionando notas sem altarar o array original
const notas = [ 7,7,8,9,];

const novasnotas = [...notas];

novasnotas.push(10);

console.log(`as novas notas são ${novasnotas}`);
console.log(`as novas originais são ${notas}`);

---------------------------------------------------------------------------------
removendo nomes repetidos


const nome =  ['ana','guilherme','pedro','helio','joao','joao','joao'];

const nomesatualizados = [...new Set(nome)];


console.log ( nomesatualizados);

---------------------------------------------------------------------------------------

objetos javascript 
const cliente = {
    nome:'guilherme',
    idade: 21,
    cidade: 'Brasilia',
    cpf: "12345634212",
};

console.log(`o nome do cliente é ${cliente.nome} e sua idade é de ${cliente.idade} anos, e ele mora em ${cliente.cidade}, seu cpf é
 ${cliente.cpf}`);

 console.log(`os 3 primeiras digitos do cpf é:${cliente.cpf.substring(0,3)}`);
 
 ---------------------------------------------------------------------------------------------
 acessando com colchetes acessar propriedade sem saber (forEach) 
 const cliente = {
    nome:'guilherme',
    idade: 21,
    cidade: 'Brasilia',
    cpf: "12345634212",
};

console.log(`o nome do cliente é ${cliente["nome"]} e sua idade é de ${cliente["idade"]} anos, e ele mora em ${cliente["cidade"]}, seu cpf é
 ${cliente.cpf}`);

const chaves = [ "nome","idade","cidade","cpf"];

chaves.forEach((chaves)=>{
    console.log(`a chave ${chaves} tem valor ${cliente[chaves]}`);
})

----------------------------------------------------------------------------------------------------------
usando push e filter 
const cliente = {
    nome:"guilherme",
    idade: 21,
    email:"guis@gmail.com",
    telenone:"1231231221",
}
cliente.enderecos = [
    {
    rua: "rua123",
    numero:123,
    apartamento: true,
    complemento:"ap 12",
},
];
cliente.enderecos.push({
    rua: "rua lima",
    numero:343,
    apartamento: false,
});

const listaapartamentos = cliente.enderecos.filter(
    (enderecos) => enderecos.apartamento === true
);

console.log(listaapartamentos);
´-----------------------------------------------------------------------------------------

[
  {
    "nome":"Olva",
    "email":"olippini0@deviantart.com",
    "telefone":[
      "4733865848",
      "47933865848"
    ],
    "endereco":{
      "logradouro":"Rua Transport",
      "numero":"05",
      "cep":"46140",
      "apartamento":true,
      "complemento":"ap 102"
    }
  },
  {
    "nome":"Oralle",
    "email":"orajchert1@clickbank.net",
    "telefone":[
      "5896279799",
      "58996279799"
    ],
    "endereco":{
      "logradouro":"Rua Kedzie",
      "numero":"89",
      "cep":"613840",
      "apartamento":false
    }
  },
  {
    "nome":"Amye",
    "email":"aranahan2@yellowbook.com",
    "telefone":[
      "1918820860",
      "19918820860"
    ],
    "endereco":{
      "logradouro":"Rua Karstens",
      "numero":"59",
      "cep":"627533",
      "apartamento":true,
      "complemento":"ap 401"
    }
  },
  {
    "nome":"Greer",
    "email":"gtumielli3@vimeo.com",
    "telefone":[
      "9466883489",
      "94966883489"
    ],
    "endereco":{
      "logradouro":"Rua Algoma",
      "numero":"077",
      "apartamento":false
    }
  },
  {
    "nome":"Juliet",
    "email":"jelphey4@wikipedia.org",
    "telefone":[
      "1198123183",
      "11998123183"
    ],
    "endereco":{
      "logradouro":"Rua Crownhardt",
      "numero":"07",
      "cep":"184366",
      "apartamento":false
    }
  },
  {
    "nome":"Blakeley",
    "email":"bmccaughran5@blog.com",
    "telefone":[
      "7919437785",
      "79919437785"
    ],
    "endereco":{
      "logradouro":"Rua Stone Corner",
      "numero":"40429",
      "cep":"1000",
      "apartamento":true
    }
  },
  {
    "nome":"Leeann",
    "email":"lhuckleby6@tuttocitta.it",
    "telefone":[
      "9045673092",
      "90945673092"
    ],
    "endereco":{
      "logradouro":"Rua Center",
      "numero":"549",
      "apartamento":false
    }
  },
  {
    "nome":"Tildi",
    "email":"tmilthorpe7@answers.com",
    "telefone":[
      "3149463623",
      "31949463623"
    ],
    "endereco":{
      "logradouro":"Rua Clyde Gallagher",
      "numero":"3962",
      "apartamento":false
    }
  },
  {
    "nome":"Kirby",
    "email":"kcoard8@squidoo.com",
    "telefone":[
      "9291767581",
      "92991767581"
    ],
    "endereco":{
      "logradouro":"Rua Valley Edge",
      "numero":"5",
      "cep":"20195",
      "apartamento":false,
      "complemento":"Venda da tia Zezé"
    }
  },
  {
    "nome":"Stephine",
    "email":"smullard9@etsy.com",
    "telefone":[
      "5327428873",
      "53927428873"
    ],
    "endereco":{
      "logradouro":"Rua Ruskin",
      "numero":"36819",
      "apartamento":true,
      "complemento":"Bloco 16 ap 202"
    }
  },
  {
    "nome":"Carolina",
    "email":"ckauschea@reddit.com",
    "telefone":[
      "1877479960",
      "18977479960"
    ],
    "endereco":{
      "logradouro":"Rua Mosinee",
      "numero":"28672",
      "cep":"8314",
      "apartamento":false,
      "complemento":"Bar dos coroas"
    }
  },
  {
    "nome":"Jerrome",
    "email":"jbletsorb@dmoz.org",
    "telefone":[
      "2492442110",
      "24992442110"
    ],
    "endereco":{
      "logradouro":"Rua Arkansas",
      "numero":"3983",
      "apartamento":false,
      "complemento":"Mercadinho"
    }
  },
  {
    "nome":"Emilee",
    "email":"eempsonc@bloomberg.com",
    "telefone":[
      "4775323087",
      "47975323087"
    ],
    "endereco":{
      "logradouro":"Rua West",
      "numero":"8",
      "apartamento":true
    }
  },
  {
    "nome":"Way",
    "email":"wportmand@census.gov",
    "telefone":[
      "9705299694",
      "97905299694"
    ],
    "endereco":{
      "logradouro":"Rua Rockefeller",
      "numero":"79",
      "cep":"81028 CEDEX 9",
      "apartamento":false
    }
  },
  {
    "nome":"Dorothea",
    "email":"dmutimere@bizjournals.com",
    "telefone":[
      "6804913737",
      "68904913737"
    ],
    "endereco":{
      "logradouro":"Rua Morrow",
      "numero":"1",
      "apartamento":true
    }
  },
  {
    "nome":"Flori",
    "email":"fbattersbyf@freewebs.com",
    "telefone":[
      "2047970414",
      "20947970414"
    ],
    "endereco":{
      "logradouro":"Rua Forest",
      "numero":"43",
      "apartamento":false,
      "complemento":"Na frente da quadra de basquete"
    }
  },
  {
    "nome":"Cecelia",
    "email":"cmacgrayg@unc.edu",
    "telefone":[
      "3569848931",
      "35969848931"
    ],
    "endereco":{
      "logradouro":"Rua Karstens",
      "numero":"115",
      "apartamento":true,
      "complemento":"ap 71"
    }
  },
  {
    "nome":"Xylia",
    "email":"xandrieuxh@berkeley.edu",
    "telefone":[
      "7593785074",
      "75993785074"
    ],
    "endereco":{
      "logradouro":"Rua Parkside",
      "numero":"065",
      "cep":"H65",
      "apartamento":true,
      "complemento":"ap 406"
    }
  },
  {
    "nome":"Husein",
    "email":"hbevissi@harvard.edu",
    "telefone":[
      "9916828153",
      "99916828153"
    ],
    "endereco":{
      "logradouro":"Rua Artisan",
      "numero":"9",
      "cep":"2281",
      "apartamento":false,
      "complemento":"Depois da trilha"
    }
  },
  {
    "nome":"Izaak",
    "email":"ikarbyj@home.pl",
    "telefone":[
      "5193301028",
      "51993301028"
    ],
    "endereco":{
      "logradouro":"Rua Grim",
      "numero":"480",
      "apartamento":false
    }
  }
]


const clientes = require("./teste.json");

function encontrar(lista,chave,valor){
    return lista.find((item)=>item[chave].includes(valor));
}

const encontrado = encontrar(clientes,"nome","Kirby");
console.log(encontrado);


const encontrar1 = encontrar(clientes,"nome","Izaak");
console.log(encontrar1);

const clientes = require("./teste.json");

function filtrarAps(clientes){
    return clientes.filter((cliente)=>{
        return !(cliente.endereco.apartamento && cliente.endereco.hasOwnProperty("complemento"));
    });
}

const filtrados = filtrarAps(clientes);
console.log(filtrados);

const clientes = require("./teste.json");

function ordernar(lista,propiedade){
    const resultado = lista.sort((a,b)=>{
        if(a[propiedade] < b[propiedade]){
            return -1;
        }
        if (a[propiedade] > b[propiedade]){
            return 1;
        }
        return 0;
    })
    return resultado;
}

const ordernarNome = ordernar(clientes,"nome");

console.log(ordernarNome);


