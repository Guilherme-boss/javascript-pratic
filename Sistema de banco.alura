export class Cliente{
    nome;
    cpf;

    get cpf(){
      return  this.cpf;
    }
    constructor(nome,cpf){
        this.nome = nome
        this.cpf = cpf
    }
}


import { Cliente } from "./Cliente.js";

export class ContaCorrente{
    static numerodecontas = 0;
    agencia;
    _cliente;

    set cliente(novoValor){
        if(novoValor instanceof Cliente){
            this._cliente = novoValor;
        }
    }

    get cliente(){
        return this._cliente;
    }


    _saldo = 0;
    
    get saldo(){
        return this._saldo;
    }

    constructor(cliente,agencia){
        this.agencia = agencia
        this.cliente = cliente
        ContaCorrente.numerodecontas +=1
    }

    sacar(valor){
        if(this._saldo >= valor){
            this._saldo -= valor;
            return valor;
        }
    }

    depositar(valor){
        if(valor <= 0)
        {
            return;
        } 
        this._saldo += valor;           
    }

    tranferir(valor, conta){
        
        const valorSacado = this.sacar(valor);
        conta.depositar(valorSacado);
        
    }
}


import {Cliente} from "./Cliente.js"
import {ContaCorrente} from "./ContaCorrente.js"

const cliente1 = new Cliente("Ricardo",11122233309);

const cliente2 = new Cliente("Alice",88822233309);


const contaCorrenteRicardo = new ContaCorrente(1001,cliente1);
contaCorrenteRicardo.depositar(500);

const conta2 = new ContaCorrente(102,cliente2);

let valor = 200;
contaCorrenteRicardo.tranferir(valor, conta2);

conta2.saldo = 30000;
console.log(conta2.saldo);


{
  "name": "bytebank",
  "version": "1.0.0",
  "description": "Projeto do bytebank para seus clientes",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "",
  "license": "ISC",
  "type": "module"
}

